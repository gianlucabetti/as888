000100160210      //---------------------------------------------------------------
000200160210      //
000300160210      //?      ORM in distinta prima OK ad uscire o ore 8:00
000400160210      //
000500160210      //---------------------------------------------------------------
000600160210
000700160210     h decedit('0,') datedit(*ymd.) option(*nodebugio)
000800160210
000900160210      //---------------------------------------------------------------
001000160210      //?Dichiarazione file.
001100160210      //---------------------------------------------------------------
001200160210      // -?File Fasi ORM
001300160210     fFNORF03L  if   e           k disk
001400160210
001500160210      // -?File Distinta
001600160210     fFIDST01L  if   e           k disk
001700160210     fFIDSF01L  if   e           k disk
001800160210
001900160210      //---------------------------------------------------------------
002000160210      //?Definizione costanti.
002100160210      //---------------------------------------------------------------
002200160210
002300160210      //---------------------------------------------------------------
002400160210      //?Definizione schiere.
002500160210      //---------------------------------------------------------------
002600160210
002700160210      //---------------------------------------------------------------
002800160210      //?Definizione aree dati.
002900160210      //---------------------------------------------------------------
003000160210
003100160210      //---------------------------------------------------------------
003200160210      //?Definizione strutture dati.
003300160210      //---------------------------------------------------------------
003400160210      // -?Parametri ricevuti?
003500160210     d kpjba         e ds
003600160210
003700160210      // -?File FNORM00F
003800160210     d FNORM00F      e ds                  extname(FNORM00F)
003900160210
004000160210      //---------------------------------------------------------------
004100160210      //?Definizione variabili globali.
004200160210      //---------------------------------------------------------------
004300160210
004400160210      // -?Flag booleani
004500160210     d wEoF            s               n   inz(*off)
004600160210
004700160210      // -?Campi di comodo
004800160210     d wconta1         s              9s 0
004900160210     d wconta2         s              9s 0
005000160210     d wconta3         s              9s 0
005100160210     d wdataini        s              8s 0
005200160210     d wdatafin        s              8s 0
005300160210
005400160210      //---------------------------------------------------------------
005500160210      //?Definizione procedure esterne.
005600160210      //---------------------------------------------------------------
005700160210
005800160210      //---------------------------------------------------------------
005900160210      //?Definizione prototipi.
006000160210      //---------------------------------------------------------------
006100160210
006200160210      //---------------------------------------------------------------
006300160210      //?Definizione key-list.
006400160210      //---------------------------------------------------------------
006500160210
006600160210      //---------------------------------------------------------------
006700160210      //?Riepilogo indicatori.
006800160210      //---------------------------------------------------------------
006900160210
007000160210      //---------------------------------------------------------------
007100160210      //?M A I N - L I N E
007200160210      //---------------------------------------------------------------
007300160210
007400160210     c     *Entry        plist
007500160210     c                   parm                    kpjba
007600160210
007700160210      /free
007800160210
007900160210       //?Operazioni iniziali
008000160210       exsr RoutInz;
008100160210
008200160210       //?Elabora file
008300160210       exsr Elabora;
008400160210
008500160210       //?Operazioni finali
008600160210       exsr RoutEnd;
008700160210
008800160210       //--------------------------------------------------------------
008900160210       //?Operazioni iniziali.
009000160210       //--------------------------------------------------------------
009100160210       BEGSR RoutInz;
009200160210
009300160210       //?Impostazione opzioni per SQL?
009400160210         exec sql set option DynUsrPrf = *Owner,
009500160210                             CloSqlCsr = *EndMod;
009600160210
009700160210       //?Imposto le date
009800160210         wdataini = 20160209;
009900160210         wdatafin = 20160209;
010000160210
010100160210       ENDSR;
010200160210
010300160210       //--------------------------------------------------------------
010400160210       //?Elabora
010500160210       //--------------------------------------------------------------
010600160210       BEGSR Elabora;
010700160210
010800160210         wEoF = *off;
010900160210         clear wconta1;
011000160210         clear wconta2;
011100160210         clear wconta3;
011200160210
011300160210       //?Leggo gli ORM
011400160210         exec sql
011500160210         DECLARE ORM cursor FOR
011600160210         SELECT *
011700160210         from FNORM00F
011800160210         WHERE ORMdfo between :wdataini and :wdatafin
011900160210         ORDER BY ORMpoe, ORMnsr, ORMnor, ORMnrv;
012000160210
012100160210         exec sql
012200160210         open ORM;
012300160210         IF sqlcode < 0;
012400160210           wEoF = *on;
012500160210         ENDIF;
012600160210
012700160210         DOW not wEoF;
012800160210           exec sql
012900160210           FETCH NEXT from ORM into :FNORM00F;
013000160210           IF sqlcod = 100 or sqlcod < 0;
013100160210             wEoF = *on;
013200160210             leave;
013300160210           ENDIF;
013400160210
013500160210         //?Aggancio la fase 400
013600160210           ORFfar = 400;
013700160210           chain (ORMpoe:ORMnsr:ORMnor:ORMnrv:ORFfar) FNORF03L;
013800160210           IF  not %found(FNORF03L);
013900160210             wconta3 += 1;
014000160210             iter;
014100160210           ENDIF;
014200160210
014300160210         //?Cerco la fase
014400160210           DSFnpg = 4;
014500160210           DSFtrd = 'CUS';
014600160210           chain (DSFnpg:ORFndc:ORFfgs:DSFtrd) FIDSF01L;
014700160210           IF  not %found(FIDSF01L) and ORFore < 090000;
014800160210             IF  ORMpkg < 5 and ORMorr < 1200;
014900160210               wconta2 += 1;
015000160210             ENDIF;
015100160210             iter;
015200160210           ENDIF;
015300160210
015400160210           IF  %editc(ORFore:'X') <= %subst(%editc(DSFdtorin:'X'):9:6) or
015500160210               ORFore < 090000;
015600160210             wconta1 += 1;
015700160210           ENDIF;
015800160210
015900160210         ENDDO;
016000160210
016100160210       //?Chiudo il cursore
016200160210         exec sql
016300160210           close ORM;
016400160210
016500160210       ENDSR;
016600160210
016700160210       //--------------------------------------------------------------
016800160210       //?Operazioni finali.
016900160210       //--------------------------------------------------------------
017000160210       BEGSR RoutEnd;
017100160210
017200160210         *inLR = *on;
017300160210         return;
017400160210
017500160210       ENDSR;
017600160210
017700160210      /end-free
