000100100413      //---------------------------------------------------------------
000200100929      //?TNVRMB67R - Mod.Filiale appartenenza potenziali 051
000300100413      //---------------------------------------------------------------
000400100413
000500100413     h decedit('0,') datedit(*ymd/) option(*nodebugio)
000600100413
000700100413      //---------------------------------------------------------------
000800100413      //?Dichiarazione file.
000900100413      //---------------------------------------------------------------
001000100930     fCNACO16L  if   e           k disk
001100100423     fTNCPO01L  uf   e           k disk
001200100929     fTNVRMB67P o    e             printer oflind(*in99)
001300100413
001400100413      //---------------------------------------------------------------
001500100413      //?Definizione costanti.
001600100413      //---------------------------------------------------------------
001700100413
001800100413      //---------------------------------------------------------------
001900100413      //?Definizione schiere.
002000100413      //---------------------------------------------------------------
002100090715
002200100413      //---------------------------------------------------------------
002300100413      //?Definizione aree dati.
002400100413      //---------------------------------------------------------------
002500100413
002600100413      //---------------------------------------------------------------
002700100413      //?Definizione strutture dati.
002800100413      //---------------------------------------------------------------
002900100415
003000100415     d KPJBA         e ds
003100101001
003200101001      // - Controllo congruenza CAP e provincia
003300101001     d FNLV13ds      e ds                  inz
003400101001     d TISI95ds      e ds                  inz
003500100423
003600100423      // Anagrafica potenziali
003700100423     d TNCPOds       e ds                  extname(TNCPO00F)
003800100423     d                                     prefix(o_)
003900100929
004000100929      // Attività
004100100929     d TIATCds       e ds                  extname(TIATC00F)
004200100415
004300100413      //---------------------------------------------------------------
004400100413      //?Definizione variabili globali.
004500100413      //---------------------------------------------------------------
004600100413
004700100413      // - Flags booleani
004800100413     d $End            s               n   inz(*off)
004900100413     d $Fine           s               n   inz(*off)
005000100428     d $Stampa         s               n   inz(*off)
005100100929
005200100929      // - Parametro ricevuto
005300100929     d Aggiorna        s              1
005400100413
005500100413      // - Campi di comodo
005600101001     d NrAtt           s              7  0
005700100929     d sav_CPOcpo      s                   like(CPOcpo)
005800100929     d TotPot          s              7  0
005900100929     d wRiga           s              2  0
006000100413
006100100413      //---------------------------------------------------------------
006200100413      //?Definizione procedure esterne.
006300100413      //---------------------------------------------------------------
006400101001
006500101001      // - Controllo cap/località
006600101001     d fnlv13r         pr                  extpgm('FNLV13R')
006700101001     d  kpjba                              likeds(kpjba)    const
006800101001     d  fnlv13ds                           likeds(FNLV13ds)
006900101001     d  tisi95ds                           likeds(TISI95ds)
007000100413
007100100413      //---------------------------------------------------------------
007200100413      //?prototipi
007300100413      //---------------------------------------------------------------
007400100413
007500100413      //---------------------------------------------------------------
007600100413      //?Definizione key-list.
007700100413      //---------------------------------------------------------------
007800100413
007900100413      //---------------------------------------------------------------
008000100413      //?Riepilogo indicatori.
008100100413      //---------------------------------------------------------------
008200100414
008300100414      // 99    : Salto pagina
008400100413
008500100413      //---------------------------------------------------------------
008600100413      //?M A I N - L I N E
008700100413      //---------------------------------------------------------------
008800100929
008900100929     c     *Entry        plist
009000100929     c                   parm                    aggiorna
009100100413
009200100413      /free
009300100413
009400100413       //?Operazioni iniziali
009500100413       exsr sr_RoutInz;
009600100426
009700100426       //?Pulisco campi di stampa
009800100929       clear TotPot;
009900100413
010000100929       //?Estraggo i potenziali della 051 con attività aperte su commerciali 001 o 134
010100100929       $End = *off;
010200100929
010300100929       //?Dichiarazione del cursore
010400100929       exec sql
010500100929       DECLARE CPO cursor for
010600101001       SELECT CPOCPO, CPORAG, CPOCIT, CPOCAP, CPOPRV, CPONAZ, CPOFLT
010700100930       FROM TNCPO00F
010800100930       WHERE CPOFLT = 051
010900100929       ORDER by CPOcpo;
011000100929
011100100929       //?Apertura del cursore
011200100929       exec sql open CPO;
011300100929
011400100929       IF sqlcode < 0;
011500100929         $End = *on;
011600100929       ENDIF;
011700100929
011800100929       DOW not $End;
011900100929
012000101001         exec sql FETCH next from CPO into :O_CPOCPO, :O_CPORAG,
012100101001                                           :O_CPOCIT, :O_CPOCAP,
012200101001                                           :O_CPOPRV, :O_CPONAZ,
012300101001                                           :O_CPOFLT;
012400100929
012500100929         IF sqlcod = 100 or sqlcod < 0;
012600100929           $End = *on;
012700100929           leave;
012800100929         ENDIF;
012900100929
013000100929         exsr Elabora;
013100100929
013200100929       ENDDO;
013300100929
013400100929       //?chiudo il cursore
013500100929       exec sql CLOSE CPO;
013600100426
013700100428       //?Stampa totali
013800100929       wRiga = 00;
013900100929       exsr Stampa;
014000100413
014100100413       //?Operazioni finali
014200100413       exsr sr_RoutEnd;
014300100413
014400100413       //--------------------------------------------------------------
014500100413       //?Operazioni iniziali.
014600100413       //--------------------------------------------------------------
014700100413       BEGSR sr_RoutInz;
014800100423
014900100413
015000100413       ENDSR;
015100100420
015200100413       //--------------------------------------------------------------
015300100929       //?Aggiorna potenziale.
015400100413       //--------------------------------------------------------------
015500100929       BEGSR Elabora;
015600100930
015700100930       //?Verifico che sia un potenziale mai codificato
015800101001         chain O_CPOcpo CNACO16L;
015900100930         IF  %found(CNACO16L);
016000100930           leavesr;
016100100930         ENDIF;
016200100930
016300101001       //?Controllo con cappario se la filiale è 134
016400101001         clear  fnlv13ds;
016500101001         clear  tisi95ds;
016600101001         I13af0 = 'S';
016700101001         I13cnv = 'S';
016800101001         I13la3 = 'S';
016900101001         I95tcn = '7';
017000101001         I95dat = %dec(%date());
017100101001         I95loc = O_CPOcit;
017200101001         I95cap = O_CPOcap;
017300101001         I95prv = O_CPOprv;
017400101001         I95nar = O_CPOnaz;
017500101001         fnlv13r(KPJBA : FNLV13DS : TISI95DS);
017600101001       //?Se non è 134 vado via
017700101001         IF  O95err = *blank and O95lna <> 134;
017800101001           leavesr;
017900101001         ENDIF;
018000101001
018100101001         $Fine = *off;
018200101001
018300101001       //?Controllo se ci sono attività aperte su commericali 134
018400101001         exec sql
018500101001         DECLARE ATT cursor for
018600101001         SELECT ATCCPO, ATCCMM
018700101001         FROM TIATC00F
018800101005         WHERE ATCCPO = :O_CPOCPO and substr(digits(ATCCMM), 1, 3)
018900101005               in('134', '001') and ATCdco = 0;
019000101001
019100101001       //?Apertura del cursore
019200101001         exec sql open ATT;
019300101001
019400101001         IF sqlcode < 0;
019500101001           $Fine = *on;
019600101001         ENDIF;
019700101001
019800101001         DOW not $Fine;
019900101001
020000101001           exec sql FETCH next from ATT into :ATCCPO, :ATCCMM;
020100101001
020200101001           IF sqlcod = 100 or sqlcod < 0;
020300101001             $Fine = *on;
020400101001             leave;
020500101001           ENDIF;
020600101001
020700101001           //?A rottura di potenziale
020800101001           IF  sav_CPOcpo <> O_CPOcpo;
020900101001             chain o_CPOcpo TNCPO01L;
021000101001             IF  %found(TNCPO01L);
021100101001               CPOflt = 134;
021200101005               CPOcmm = 1340012;
021300101001               IF  aggiorna <> ' ';
021400101001                 update TNCPO000;
021500101001               ENDIF;
021600101001               wRiga = 01;
021700101001               exsr stampa;
021800101001             //?conto i potenziali aggiornati
021900101001               TotPot += 1;
022000101001               sav_CPOcpo = O_CPOcpo;
022100101001             ENDIF;
022200101001           ENDIF;
022300101001
022400101001         ENDDO;
022500101001
022600101001         //?chiudo il cursore
022700101001         exec sql CLOSE ATT;
022800100423
022900100423       ENDSR;
023000100428
023100100428       //--------------------------------------------------------------
023200100929       //?Stampa di controllo.
023300100428       //--------------------------------------------------------------
023400100929       BEGSR Stampa;
023500100428
023600100428         IF  not $Stampa or *in99;
023700100929           write MB6701P;
023800100929           write MB6702P;
023900100428           $Stampa = *on;
024000100428           *in99 = *off;
024100100428         ENDIF;
024200100428
024300100929         IF  wRiga = 01;
024400100929           write MB6703P;
024500100929         ENDIF;
024600100929
024700100929         IF  wRiga = 00;
024800100929           write MB6704P;
024900100929         ENDIF;
025000100428
025100100428       ENDSR;
025200100426
025300100413       //--------------------------------------------------------------
025400100413       //?Operazioni finali.
025500100413       //--------------------------------------------------------------
025600100413       BEGSR sr_RoutEnd;
025700100413
025800100413         *inLR = *on;
025900100413         return;
026000100413
026100100413       ENDSR;
026200100413
026300100413      /end-free
