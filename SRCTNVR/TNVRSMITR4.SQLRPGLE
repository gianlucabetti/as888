000100161021       //==============================================================
000200161108       //?TNVRSMITR4 * RI-generazione FITR400F da FLTR700F.            ?
000300161021       //==============================================================
000400161021
000500161021       //--------------------------------------------------------------
000600161021       //?Parametri di compilazione (vedi *cmd UBCRTOBJ).              ?
000700161021       //--------------------------------------------------------------
000800161021
000900161021     /*PRM  dbgview(*source)
001000161021     /*END
001100161021
001200161021       //--------------------------------------------------------------
001300161021       //?Specifiche di controllo.                                     ?
001400161021       //--------------------------------------------------------------
001500161021
001600161021     h decedit('0,') datedit(*dmy/) option(*nodebugio)
001700161021     h dftactgrp(*no)
001800161021     h alwnull(*inputonly)
001900161021
002000161021       //--------------------------------------------------------------
002100161021       //?Dichiarazione file.                                          ?
002200161021       //--------------------------------------------------------------
002300161021
002400161021       // -?Spunte da VanDerLande - senza tracciato?
002500161108     fFITR400F  o    e             disk
002600161021
002700161021       //--------------------------------------------------------------
002800161021       //?Definizione costanti.                                        ?
002900161021       //--------------------------------------------------------------
003000161021
003100161024       // -?Costante per controllo "caratteri solo numerici"?
003200161024     d c_Digits        c                   const('0123456789')
003300161021
003400161021       //--------------------------------------------------------------
003500161021       //?Definizione schiere.                                         ?
003600161021       //--------------------------------------------------------------
003700161021
003800161021
003900161021       //--------------------------------------------------------------
004000161021       //?Definizione aree dati.                                       ?
004100161021       //--------------------------------------------------------------
004200161021
004300161021
004400161021       //--------------------------------------------------------------
004500161021       //?Definizione strutture dati.                                  ?
004600161021       //--------------------------------------------------------------
004700161021
004800161021       // -?Parametri Ricevuti?
004900161021     d KPJBA         e ds
005000161214     d tnvrITR4ds      ds                  inz    qualified
005100161021     d   prm_Fil                      3s 0 inz
005200161214     d   prm_Cpc                      1a   inz
005300161021     d   prm_Time_Ini                14s 0 inz
005400161021     d   prm_Time_End                14s 0 inz
005500161108     d*//  prm_Date_End...
005600161108     d*//                     18     25s 0 inz
005700161021
005800161021       // -?Status ds?
005900161021     d Status         sds
006000161021     d   SDSpgm          *proc
006100161021     d*//SDSprm          *parms
006200161021     d*//SDSdta              191    198
006300161021     d   SDSjob              244    253
006400161021     d   SDSusr              254    263
006500161021
006600161108       // -?Campi Formato Record FITR400F?
006700161108     d FITR4_ds        ds                  inz
006800161021     d   TR4ctl                1      1
006900161021     d   TR4npl                2      3
007000161021     d   TR4nfv                4      8
007100161021     d   TR4tim                9     22
007200161021     d   TR4ms1               23     27
007300161021     d   TR4msx               28     28
007400161021     d   TR4ms2               29     31
007500161021     d   TR4cod               32     36
007600161021     d   TR4020               37     38
007700161021     d   TR4f01               39     39
007800161021     d   TR4pic               40     44
007900161021     d   TR4f02               45     45
008000161021     d   TR4pgr               46     51
008100161021     d   TR4f03               52     52
008200161021     d   TR4pod               53     55
008300161021     d   TR4f04               56     56
008400161021     d   TR4ods               57     57
008500161021     d   TR4f05               58     58
008600161021     d   TR4pad               59     61
008700161021     d   TR4f06               62     62
008800161021     d   TR4dts               63     63
008900161021     d   TR4f07               64     64
009000161021     d   TR4ps1               65     65
009100161021     d   TR4pn1               66     67
009200161021     d   TR4pd1               68     97
009300161021     d   TR4f08               98     98
009400161021     d   TR4ps2               99     99
009500161021     d   TR4pn2              100    101
009600161021     d   TR4pd2              102    130
009700161021     d***???                 131    131
009800161021     d   TR4f09              132    132
009900161021     d   TR4ps3              133    133
010000161021     d   TR4pn3              134    135
010100161021     d   TR4pd3              136    165
010200161021     d   TR4f10              166    166
010300161021     d   TR4ps4              167    167
010400161021     d   TR4pn4              168    169
010500161021     d   TR4pd4              170    199
010600161021     d       TR4dm1          181    184
010700161021     d       TR4dm2          185    188
010800161021     d       TR4dm3          189    192
010900161021     d     TR4dm             181    192
011000161021     d   TR4f11              200    200
011100161021     d   TR4pep              201    214
011200161021     d   TR4f12              215    215
011300161021     d   TR4pes              216    216
011400161021     d   TR4f13              217    217
011500161021     d   TR4pup              218    231
011600161021     d   TR4f14              232    232
011700161021     d   TR4pus              233    233
011800161021     d   TR4f15              234    234
011900161021     d   TR4crc              235    236
012000161021
012100161021       // -?Campi Formato Record FLTR700F?
012200161021     d FLTR7_ds      e ds                  inz   extname(FLTR700F)
012300161021
012400161021       //--------------------------------------------------------------
012500161021       //?Definizione variabili globali.                               ?
012600161021       //--------------------------------------------------------------
012700161021
012800161021       // -?Flags booleani?
012900161021     d $Fine           s               n   inz
013000161021     d $First          s               n   inz
013100161021
013200161021       // -?Indici di schiera?
013300161021     d xx              s              3  0 inz
013400161021
013500161021       // -?Stringhe SQL da eseguire?
013600161021     d wSql            s          32740    inz   varying
013700161021
013800161021       //--------------------------------------------------------------
013900161021       //?Definizione prototipi procedure usate.                       ?
014000161021       //--------------------------------------------------------------
014100161021
014200161021       // -?Caricamento £x?
014300161024     d*// ds_£1           ds                  inz
014400161024     d*//   sk_£1                        3s 0 dim(30)  inz
014500161024     d*// TRUL06ds      e ds                  inz
014600161024      *///copy gaitrasrc/srcProtoPR,TRUL06R
014700161021
014800161021       // -?API QCAPCMD (Process Commands)?
014900161021     d Qcmd            s           2048    inz  varying
015000161021      /copy qSysInc/qRpgleSrc,QCAPCMD
015100161021      /copy gaitrasrc/srcProtoPR,QCAPCMD
015200161021       // -?Parametri gestione errori API.?
015300161021      /copy qsysinc/qRpgleSrc,QUSEC
015400161021
015500161021       //--------------------------------------------------------------
015600161021       //?Definizione key-list.                                        ?
015700161021       //--------------------------------------------------------------
015800161021
015900161021
016000161021       //--------------------------------------------------------------
016100161021       //?Riepilogo indicatori utilizzati.                             ?
016200161021       //--------------------------------------------------------------
016300161021
016400161021
016500161021       //--------------------------------------------------------------
016600161021       //?M A I N - L I N E                                            ?
016700161021       //--------------------------------------------------------------
016800161021
016900161021     c     *Entry        plist
017000161021     c                   parm                    KPJBA
017100161021
017200161021      /free
017300161021
017400161021       // -?Operazioni iniziali?
017500161021       exsr  sr_RoutInz;
017600161021
017700161021       // -?Preparazione stringa SQL?
017800161021       exsr  sr_PrepSQL;
017900161021
018000161021       // -?Apertura del cursore?
018100161021       exsr  sr_OpenCursor;
018200161021
018300161021       // -?Lettura del file?
018400161021       DoW  Not $Fine;
018500161021         exsr  sr_ReadCursor;
018600161021       EndDo;
018700161021
018800161021       // -?Chiusura del cursore?
018900161021       exsr  sr_CloseCursor;
019000161021
019100161021       // -?Operazioni finali?
019200161021       exsr  sr_RoutEnd;
019300161021
019400161021       //--------------------------------------------------------------
019500161021       //?Operazioni iniziali.                                         ?
019600161021       //--------------------------------------------------------------
019700161021       BEGSR  sr_RoutInz;
019800161021
019900161021         // -?Impostazione opzioni per SQL?
020000161021         exec sql   set  option  DynUsrPrf = *Owner,
020100161021                                 CloSqlCsr = *EndMod;
020200161021
020300161021         // -?Impostazione chiusura?
020400161021         *inLR = *on;
020500161021
020600161021         // -?Ricezione Parametri?
020700161214         tnvrITR4ds = KPJBU;
020800161024         if  %check( c_Digits : %subst( KPJBU : 1 :
020900161214                                %size(tnvrITR4ds.prm_Fil) ) )      > *zero;
021000161214           clear  tnvrITR4ds.prm_Fil;
021100161024         endif;
021200161024         if  %check( c_Digits : %subst( KPJBU : 1 +
021300161214                                %size(tnvrITR4ds.prm_Fil) +
021400161214                                %size(tnvrITR4ds.prm_Cpc) :
021500161214                                %size(tnvrITR4ds.prm_Time_Ini) ) ) > *zero;
021600161214           clear  tnvrITR4ds.prm_Time_Ini;
021700161024         endif;
021800161024         if  %check( c_Digits : %subst( KPJBU : 1 +
021900161214                                %size(tnvrITR4ds.prm_Fil) +
022000161214                                %size(tnvrITR4ds.prm_Cpc) +
022100161214                                %size(tnvrITR4ds.prm_Time_Ini ) :
022200161214                                %size(tnvrITR4ds.prm_Time_End) ) ) > *zero;
022300161214           clear  tnvrITR4ds.prm_Time_End;
022400161024         endif;
022500161021
022600161024         //*·// -?Reperimento Filiali dell'Area ("£1")?
022700161024         //*·clear  sk_£1;
022800161024         //*·clear  KPJBU;
022900161024         //*·clear  TRUL06ds;
023000161214         //*·if  tnvrITR4ds.prm_Fil > *zero;
023100161024         //*·  D06cod = '£1';
023200161214         //*·  D06key = %editc( tnvrITR4ds.prm_Fil : 'X' ) + '    S';
023300161214         //*·  if  tnvrITR4ds.prm_Date_End > *zero;
023400161214         //*·    D06drf = tnvrITR4ds.prm_Date_End;
023500161024         //*·  else;
023600161024         //*·    D06drf = %int( %subst( %char( %dec( %timestamp() ) )
023700161024         //*·                           : 1 : 8 ) );
023800161024         //*·  endif;
023900161024         //*·  KPJBU  = TRUL06ds;
024000161024         //*·  trul06r ( KPJBA );
024100161024         //*·  TRUL06ds = KPJBU;
024200161024         //*·  ds_£1 = D06lia;
024300161024         //*·endif;
024400161021
024500161021       ENDSR;
024600161021
024700161021       //--------------------------------------------------------------
024800161021       //?Preparazione stringa SQL per estrazione dati da FLTR700F.    ?
024900161021       //--------------------------------------------------------------
025000161021       BEGSR  sr_PrepSQL;
025100161021
025200161021         wSQL =  'select * +
025300161024                    from FLTR700F';
025400161024
025500161024
025600161214         If  tnvrITR4ds.prm_Fil > *zero;
025700161024
025800161024           //*·$First  = *on;
025900161024           //*·wSQL += ' +
026000161024           //*·        where TR7fil in ( ';
026100161024           //*·
026200161024           //*·For  xx = 1  To %elem( sk_£1 );
026300161024           //*·
026400161024           //*·  if  sk_£1(xx) > *zero;
026500161024           //*·    if  NOT $First;
026600161024           //*·      wSQL += ', ';
026700161024           //*·    endif;
026800161024           //*·    wSQL   += '''' + %editc( sk_£1(xx) : 'X' ) + '''';
026900161024           //*·    $First  = *off;
027000161024           //*·  else;
027100161024           //*·    leave;
027200161024           //*·  endif;
027300161024           //*·
027400161024           //*·EndFor;
027500161024           //*·
027600161024           //*·wSQL +=       ' )';
027700161024
027800161024           wSQL += ' +
027900161214                   where TR7fil = ''' + %editc( tnvrITR4ds.prm_Fil : 'X' )
028000161108                                + '''';
028100161024
028200161024         EndIf;
028300161021
028400161214         if  tnvrITR4ds.prm_Time_Ini > *zero  or
028500161214             tnvrITR4ds.prm_Time_End > *zero;
028600161214           if  tnvrITR4ds.prm_Fil <= *zero;
028700161024             wSQL +=   ' where';
028800161024           else;
028900161024             wSQL +=   ' and';
029000161024           endif;
029100161108           wSQL +=     ' TR7tim between ''' +
029200161214                                %char( tnvrITR4ds.prm_Time_Ini ) +
029300161108                                  ''' and ''' +
029400161214                                %char( tnvrITR4ds.prm_Time_End ) +
029500161108                                  '''';
029600161021         endif;
029700161021
029800161021         wSQL += ' order by TR7fil, TR7tim, TR7ctl, TR7020 +
029900161021                     for fetch only';
030000161021
030100161021       ENDSR;
030200161021
030300161021       //--------------------------------------------------------------
030400161021       //?Apertura cursore.                                            ?
030500161021       //--------------------------------------------------------------
030600161021       BEGSR  sr_OpenCursor;
030700161021
030800161021         // -?Dichiarazione cursore?
030900161021         exec sql   prepare S1   from :wSQL;
031000161021         exec sql   declare C1   cursor for S1;
031100161021
031200161021         if  SQLcode < *zero;
031300161021           $Fine = *on;
031400161021           exsr  sr_PrintERR;
031500161021         endif;
031600161021
031700161021         // -?Apertura del cursore?
031800161021         exec sql   open C1;
031900161021
032000161021         if  SQLcode < *zero;
032100161021           $Fine = *on;
032200161021           exsr  sr_PrintERR;
032300161021         endif;
032400161021
032500161021       ENDSR;
032600161021
032700161021       //--------------------------------------------------------------
032800161021       //?Lettura cursore.                                             ?
032900161021       //--------------------------------------------------------------
033000161021       BEGSR  sr_ReadCursor;
033100161021
033200161021         $Fine = *off;
033300161021         clear  FLTR7_ds;
033400161021
033500161021         exec sql   fetch next   from C1   into :FLTR7_ds;
033600161021
033700161021         select;
033800161021           when  SQLcode = 100;
033900161021             $Fine = *on;
034000161021           when  SQLcode < *zero;
034100161021             $Fine = *on;
034200161021             exsr  sr_PrintERR;
034300161021           other;
034400161108             exsr  sr_Write_FITR4;
034500161021         endsl;
034600161021
034700161021       ENDSR;
034800161021
034900161021       //--------------------------------------------------------------
035000161021       //?Chiusura cursore.                                            ?
035100161021       //--------------------------------------------------------------
035200161021       BEGSR  sr_CloseCursor;
035300161021
035400161021         // -?Chiusura del cursore?
035500161021         exec sql   close C1;
035600161021
035700161021       ENDSR;
035800161021
035900161021       //--------------------------------------------------------------
036000161108       //?Caricamento dati nel record di FITR4.                        ?
036100161021       //--------------------------------------------------------------
036200161108       BEGSR  sr_Write_FITR4;
036300161021
036400161108         // -?Imposta altri campi (non TR4DA1)?
036500161214         TR4fil    = %editc( tnvrITR4ds.prm_Fil : 'X' );
036600161108         TR4pc     = '0';
036700161214         TR4pc     = tnvrITR4ds.prm_Cpc;
036800161108         TR4datOra = %subst( %char( %dec( %timestamp() ) )
036900161108                             : 1 : %len(TR4datOra) );
037000161108
037100161108         // -?Raggruppa i dati di TR4DA1 nei campi della DS?
037200161108         clear  FITR4_ds;
037300161021
037400161021         TR4ctl  = TR7ctl;
037500161021         TR4npl  = TR7npl;
037600161021         TR4nfv  = TR7nfv;
037700161021         TR4tim  = TR7tim;
037800161021         TR4ms1  = %subst( TR7mil : 1 : %len( TR4ms1 )  );
037900161021         //*·TR4msx  = '-';
038000161021         TR4ms2  = %subst( TR7mil : %len( TR4ms1 ) + 1 : %len( TR4ms2 ) );
038100161021         TR4cod  = TR7cod;
038200161021         TR4020  = TR7020;
038300161021         TR4pic  = TR7pic;
038400161021         TR4pgr  = TR7pgr;
038500161021         TR4pod  = TR7pod;
038600161021         TR4ods  = TR7ods;
038700161021         TR4pad  = TR7pad;
038800161021         TR4dts  = TR7dts;
038900161021         TR4ps1  = TR7ps1;
039000161021         TR4pn1  = TR7pn1;
039100161021         TR4pd1  = TR7pd1;
039200161021         TR4ps2  = TR7ps2;
039300161021         TR4pn2  = TR7pn2;
039400161021         //*·TR4pd2  = TR7pd2
039500161021         evalR  TR4pd2 = TR7pd2;
039600161021         TR4ps3  = TR7ps3;
039700161021         TR4pn3  = TR7pn3;
039800161021         TR4pd3  = TR7pd3;
039900161021         TR4ps4  = TR7ps4;
040000161021         TR4pn4  = TR7pn4;
040100161021         TR4pd4  = TR7pd4;
040200161021         TR4pep  = TR7pep;
040300161021         TR4pes  = TR7pes;
040400161021         TR4pup  = TR7pup;
040500161021         TR4pus  = TR7pus;
040600161021         TR4crc  = TR7crc;
040700161021
040800161108         TR4da1  = FITR4_ds;
040900161021
041000161021         //___________
041100161108         write  FITR4;
041200161021         //¯¯¯¯¯¯¯¯¯¯¯
041300161021
041400161021       ENDSR;
041500161021
041600161021       //--------------------------------------------------------------
041700161021       //?Stampa segnalazione dell'errore rilevato via SQL             ?
041800161021       //--------------------------------------------------------------
041900161021       BEGSR  sr_PrintERR;
042000161021
042100161021         // -?Stampa del Dump?
042200161021         Dump(A);
042300161021
042400161021         // -?Stampa del Job-Log?
042500161021         Qcmd = 'DSPJOBLOG job(*) output(*print)';
042600161021         exsr  sr_ExecCmd;
042700161021
042800161021         // -?Chiusura del programma?
042900161021         exsr  sr_RoutEnd;
043000161021
043100161021       ENDSR;
043200161021
043300161021       //--------------------------------------------------------------
043400161021       //?Esecuzione del comando (già impostato).                      ?
043500161021       //--------------------------------------------------------------
043600161021       BEGSR  sr_ExecCmd;
043700161021
043800161021         clear Qcap0100;
043900161021         Qcabcsdh = *off;
044000161021         Qcapa    = *off;
044100161021         Qcacmdss = *off;
044200161021         Qcaerved = *allX'00';
044300161021
044400161021         clear Qusec;
044500161021         Qusbprv  = %size(Qusec);
044600161021
044700161021         ProcessCommands ( Qcmd : %size(Qcmd) : Qcap0100 :
044800161021                           %size(Qcap0100) : 'CPOP0100' : *omit :
044900161021                           0 : 0 : Qusec);
045000161021
045100161021         //if  Qusei <> *blank;
045200161021         //  ...;
045300161021         //endif;
045400161021
045500161021       ENDSR;
045600161021
045700161021       //--------------------------------------------------------------
045800161021       //?Operazioni finali.                                           ?
045900161021       //--------------------------------------------------------------
046000161021       BEGSR  sr_RoutEnd;
046100161021
046200161021         // -?Uscita dal *pgm?
046300161021         return;
046400161021
046500161021       ENDSR;
046600161021
046700161021      /end-free
