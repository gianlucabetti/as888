000100121217       //==============================================================
000200161109       // Storicizza file TIMAC00F prima differenza
000300121217       //==============================================================
000400141008
000500121217       //--------------------------------------------------------------
000600161103       // Parametri di compilazione (vedi *cmd UBCRTOBJ).              ?
000700121217       //--------------------------------------------------------------
000800121217
000900121217     /*PRM dbgview(*source)
001000121217     /*PRM commit(*none)
001100121217     /*END
001200161108     **
001300161108     ** ISTRUZIONI PER LA COMPILAZIONE
001400161108     **
001500161109     ** 1. Creare il modulo UBMASTO1R (Opz 15 PDM)
001600161109     ** 2. Creare/Aggiornare il programma di servizio UBMASTO1R (CRTSRVPGM / UPDSRVPGM)
001700161108     **    con ACTGRP(*caller)
001800161108     **    aggiungere nella BNDDIR(UBBNDDIR)
001900161108     ** 3. Visto chi userà questo servizio, non serve l'oggetto programma
002000161108     ** 4. Cancellare il modulo.
002100161108     **
002200121217
002300121217       //--------------------------------------------------------------
002400161103       // Specifiche di controllo.                                     ?
002500121217       //--------------------------------------------------------------
002600121217
002700121217     h decedit('0,') datedit(*dmy/) option(*nodebugio)
002800161103     h alwnull(*inputonly)
002900161104
003000141029     h expropts(*resdecpos)
003100121217
003200121217       //--------------------------------------------------------------
003300161103       // Dichiarazione file.                                          ?
003400121217       //--------------------------------------------------------------
003500121217
003600121217       //--------------------------------------------------------------
003700161103       // Definizione costanti.                                        ?
003800121217       //--------------------------------------------------------------
003900121217
004000161103       // parte fissa della where SQL
004100161109     d cWhere          c                   'MACSto1 <>''S'''
004200121217
004300121217       //--------------------------------------------------------------
004400161103       // Definizione schiere.                                         ?
004500121217       //--------------------------------------------------------------
004600121217
004700121217
004800121217       //--------------------------------------------------------------
004900161103       // Definizione aree dati.                                       ?
005000121217       //--------------------------------------------------------------
005100121217
005200121217
005300121217       //--------------------------------------------------------------
005400161103       // Definizione strutture dati.                                  ?
005500121217       //--------------------------------------------------------------
005600121218
005700161103       // - Status?
005800121217     d Psds           sds
005900121217     d   SDSpgm          *proc
006000121217     d*//JobName             244    253                                         Job name
006100161103     d*//JobUser             254    263
006200121217     d*//JobNumber           264    269s 0                                      Job number
006300121217
006400121217       //--------------------------------------------------------------
006500161103       // Definizione variabili.                                       ?
006600121217       //--------------------------------------------------------------
006700121217
006800161103       // - Campi di comodo?
006900161104     d fineDati        s               n
007000161107       // Periodo DA
007100161110     d MASTOTSDa       s               z
007200161107       // Periodo AL
007300161110     d MASTOTSAl       s               z
007400121218
007500161103       // - Stringa SQL da eseguire?
007600161014     d wSQL            s           2048    inz  varying
007700121217
007800121217       //--------------------------------------------------------------
007900161103       // Definizione prototipi procedure.                             ?
008000121217       //--------------------------------------------------------------
008100121217
008200161110       /copy gaitrasrc/srcProtoPI,UBMASTO1R
008300121217
008400121217       //--------------------------------------------------------------
008500161103       // Definizione key-list.                                        ?
008600121217       //--------------------------------------------------------------
008700161104
008800121217
008900121217       //--------------------------------------------------------------
009000161103       // Definizione parametri procedura.                             ?
009100121217       //--------------------------------------------------------------
009200121217
009300161103
009400121217       //--------------------------------------------------------------
009500121217       //?M A I N - L I N E                                            ?
009600121217       //--------------------------------------------------------------
009700121217
009800161014       // Operazioni iniziali?
009900121217       exsr sr_RoutInz;
010000121217
010100161014       // Esecuzione pareggio
010200161110       exsr  sr_UpdateTIMAC;
010300121217
010400161103       // - Operazioni finali?
010500121217       exsr sr_RoutEnd;
010600121217
010700121217       //--------------------------------------------------------------
010800161103       // Operazioni iniziali.                                         ?
010900121217       //--------------------------------------------------------------
011000121217       BEGSR  sr_RoutInz;
011100121217
011200121217         exec sql  set option  dynusrprf = *owner,
011300121217                               closqlcsr = *endmod;
011400121217
011500161103         // - Controllo parametri d'ingresso
011600161103         exsr  sr_CtrlParms;
011700161103
011800161103         // - Preparazione stringa SQL?
011900161103         exsr  sr_PrepSQL;
012000121217
012100161103         // - Apertura cursore SQL?
012200121217         exsr  sr_OpenCursor;
012300130208
012400140925       ENDSR;
012500141028
012600141028       //--------------------------------------------------------------
012700161103       // Controllo parametri
012800141028       //--------------------------------------------------------------
012900161103       BEGSR  sr_CtrlParms;
013000161014
013100161109         // Se Periodo DA vuoto, allora la data di partenza limite (03/11/2016) alle 00
013200161109         // prima del 03/11/2016, la data in MALMSG ha delle posizioni diverse e quando è
013300161109         // corretta (da 12/10/2016 14:10:45) comunque ci sono stati errori negli invii di posta
013400161110         MASTOTSDa = iMASTOTSDa;
013500161110         if iMASTOTSDa = *loval;
013600161110           MASTOTSDa = %timestamp(%date('2016-11-03'));
013700161104         endif;
013800161104
013900161104         // Se Periodo AL vuoto, allora imposto oggi a quest'ora
014000161110         MASTOTSAl = iMASTOTSAl;
014100161110         if iMASTOTSAl = *loval;
014200161110           MASTOTSAl = %timestamp();
014300161104         endif;
014400161104
014500161109         // Periodo DA non può essere inferiore alla data di partenza limite (03/11/2016)
014600161110         if %date(MASTOTSDa) < d'2016-11-03';
014700161110           oMASTOEsito = 'I';
014800161103           exsr sr_RoutEnd;
014900161103         endif;
015000161103
015100161103         // Periodo AL deve essere >= a DA
015200161110         if MASTOTSAl < MASTOTSDa;
015300161110           oMASTOEsito = 'I';
015400161103           exsr sr_RoutEnd;
015500161103         endif;
015600161103
015700161103       ENDSR;
015800161103
015900161103       //--------------------------------------------------------------
016000161103       // Preparazione stringa SQL                                     ?
016100161103       //--------------------------------------------------------------
016200161103       BEGSR  sr_PrepSQL;
016300161110
016400161110         // cristallizzo (storicizzo) TIMAC00F per la differenza 1 quando
016500161110         // la differenza tra la data del processo e la fascia oraria è >
016600161110         // del numero di ore per la cristallizzazione (che al 9/11/16 è 4h).
016700161110         // Es.: sono le 10:23 , la fascia è quella di oggi alle 06, la differenza (in ore) è
016800161110         // 4 --> NON storicizzo
016900161110         // Es.: sono le 10:23 , la fascia è quella di oggi alle 05, la differenza (in ore) è
017000161110         // 5 --> Storicizzo
017100161109
017200161109       // esempio sql per controllare cosa storicizzare
017300161110         wSQL ='UPDATE +
017400161110                timac00f +
017500161110                set macsto1 = ''S'' +
017600161110                where +
017700161110                dec(char( +
017800161110                TIMESTAMPDIFF(8, +
017900161110                char(current_timestamp +
018000161110                - timestamp(macdtchk, mactmchk))) ) , 6 , 0) > 4 +
018100161110                and ';
018200161110         wSQL = %trim(wSQL) +
018300161110                ' ' + cWhere ;
018400161109
018500141020       ENDSR;
018600121217
018700121217       //--------------------------------------------------------------
018800161103       // Apertura cursore.                                            ?
018900121217       //--------------------------------------------------------------
019000121217       BEGSR  sr_OpenCursor;
019100121217
019200161110         // non ho cursori
019300121217
019400121217       ENDSR;
019500121217
019600121217       //--------------------------------------------------------------
019700161103       // Lettura cursore.                                             ?
019800121217       //--------------------------------------------------------------
019900161110       BEGSR  sr_UpdateTIMAC;
020000121217
020100161110         // eseguo cristallizzazione
020200161110         exec sql   execute immediate :wSQL;
020300161103
020400161110         select;
020500161110          // nessun rcd trovato
020600161110          when sqlCode = 100;
020700161110           // esco dicendo che non ho aggiornato nulla
020800161110           oMASTOEsito = '3';
020900161110          // errore SQL
021000161110          when sqlCode < 0;
021100161110           // esco con errore SQL
021200161110           oMASTOEsito = '2';
021300161110          // se ho aggiornato, lo segnalo
021400161110          other;
021500161110           oMASTOEsito = '1';
021600161110         endsl;
021700161108
021800161108         // - Chiusura cursore SQL?
021900161108         exsr  sr_CloseCursor;
022000161103
022100121217       ENDSR;
022200121217
022300121217       //--------------------------------------------------------------
022400161104       // Chiusura cursore.                                            ?
022500121217       //--------------------------------------------------------------
022600121217       BEGSR  sr_CloseCursor;
022700121217
022800161110         // non ho cursori
022900121217
023000121217       ENDSR;
023100121217
023200121217       //--------------------------------------------------------------
023300161104       // Operazioni finali.                                           ?
023400121217       //--------------------------------------------------------------
023500121217       BEGSR  sr_RoutEnd;
023600161103
023700161103         // - Chiusura pgm?
023800121217         return;
023900121217
024000121217       ENDSR;
024100121217
